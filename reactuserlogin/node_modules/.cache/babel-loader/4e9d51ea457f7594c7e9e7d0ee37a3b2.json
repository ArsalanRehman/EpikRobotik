{"ast":null,"code":"var _jsxFileName = \"/home/kali/NEW/EpikRobotik/reactuserlogin/src/components/FormLib.js\",\n    _s = $RefreshSig$();\n\nimport { useField } from \"formik\";\nimport { useState } from \"react\";\nimport { StyledTextInput, StyledLabel, StyledIcon, ErrorMsg } from \"./../components/Styles\";\nimport { FiEyeOff, FiEye } from \"react-icons/fi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TextInput = _ref => {\n  _s();\n\n  let {\n    icon,\n    ...props\n  } = _ref;\n  const [field, meta] = useField(props);\n  const [show, setShow] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(StyledLabel, {\n      htmlFor: props.name,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), props.type !== \"password\" && /*#__PURE__*/_jsxDEV(StyledTextInput, {\n      invalid: meta.touched && meta.error,\n      ...field,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 37\n    }, this), props.type === \"password\" && /*#__PURE__*/_jsxDEV(StyledTextInput, {\n      invalid: meta.touched && meta.error,\n      ...field,\n      ...props,\n      type: show ? \"text\" : \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(StyledIcon, {\n      children: icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), props.type === \"password\" && /*#__PURE__*/_jsxDEV(StyledIcon, {\n      onClick: () => setShow(!show),\n      right: true,\n      children: [show && /*#__PURE__*/_jsxDEV(FiEye, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 20\n      }, this), !show && /*#__PURE__*/_jsxDEV(FiEyeOff, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(ErrorMsg, {\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ErrorMsg, {\n      style: {\n        visibility: \"hiddden\"\n      },\n      children: \".\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TextInput, \"9eRIAVGyCrqByaFfiB06D/xZ1lY=\", false, function () {\n  return [useField];\n});\n\n_c = TextInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextInput\");","map":{"version":3,"names":["useField","useState","StyledTextInput","StyledLabel","StyledIcon","ErrorMsg","FiEyeOff","FiEye","TextInput","icon","props","field","meta","show","setShow","position","name","label","type","touched","error","visibility"],"sources":["/home/kali/NEW/EpikRobotik/reactuserlogin/src/components/FormLib.js"],"sourcesContent":["import { useField } from \"formik\";\nimport { useState } from \"react\";\nimport {\n  StyledTextInput,\n  StyledLabel,\n  StyledIcon,\n  ErrorMsg,\n} from \"./../components/Styles\";\nimport { FiEyeOff, FiEye } from \"react-icons/fi\";\nexport const TextInput = ({ icon, ...props }) => {\n  const [field, meta] = useField(props);\n  const [show, setShow] = useState(false);\n  return (\n    <div style={{ position: \"relative\" }}>\n      <StyledLabel htmlFor={props.name}>{props.label}</StyledLabel>\n      {props.type !== \"password\" && <StyledTextInput\n                invalid={meta.touched && meta.error}\n \n      {...field} {...props} \n      />}\n      {props.type === \"password\" && (\n        <StyledTextInput\n          invalid={meta.touched && meta.error}\n          {...field}\n          {...props}\n          type={show ? \"text\" : \"password\"}\n        />\n      )}\n      <StyledIcon>{icon}</StyledIcon>\n      {props.type === \"password\" && (\n        <StyledIcon onClick={() => setShow(!show)} right>\n          {show && <FiEye />}\n          {!show && <FiEyeOff />}\n        </StyledIcon>\n      )}\n      {meta.touched && meta.error ? (\n        <ErrorMsg>{meta.error}</ErrorMsg>\n      ) : (\n        <ErrorMsg style={{ visibility: \"hiddden\" }}>.</ErrorMsg>\n      )}\n    </div>\n  );\n};\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,QAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SACEC,eADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,QAJF,QAKO,wBALP;AAMA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,gBAAhC;;AACA,OAAO,MAAMC,SAAS,GAAG,QAAwB;EAAA;;EAAA,IAAvB;IAAEC,IAAF;IAAQ,GAAGC;EAAX,CAAuB;EAC/C,MAAM,CAACC,KAAD,EAAQC,IAAR,IAAgBZ,QAAQ,CAACU,KAAD,CAA9B;EACA,MAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,KAAD,CAAhC;EACA,oBACE;IAAK,KAAK,EAAE;MAAEc,QAAQ,EAAE;IAAZ,CAAZ;IAAA,wBACE,QAAC,WAAD;MAAa,OAAO,EAAEL,KAAK,CAACM,IAA5B;MAAA,UAAmCN,KAAK,CAACO;IAAzC;MAAA;MAAA;MAAA;IAAA,QADF,EAEGP,KAAK,CAACQ,IAAN,KAAe,UAAf,iBAA6B,QAAC,eAAD;MACpB,OAAO,EAAEN,IAAI,CAACO,OAAL,IAAgBP,IAAI,CAACQ,KADV;MAAA,GAG1BT,KAH0B;MAAA,GAGfD;IAHe;MAAA;MAAA;MAAA;IAAA,QAFhC,EAOGA,KAAK,CAACQ,IAAN,KAAe,UAAf,iBACC,QAAC,eAAD;MACE,OAAO,EAAEN,IAAI,CAACO,OAAL,IAAgBP,IAAI,CAACQ,KADhC;MAAA,GAEMT,KAFN;MAAA,GAGMD,KAHN;MAIE,IAAI,EAAEG,IAAI,GAAG,MAAH,GAAY;IAJxB;MAAA;MAAA;MAAA;IAAA,QARJ,eAeE,QAAC,UAAD;MAAA,UAAaJ;IAAb;MAAA;MAAA;MAAA;IAAA,QAfF,EAgBGC,KAAK,CAACQ,IAAN,KAAe,UAAf,iBACC,QAAC,UAAD;MAAY,OAAO,EAAE,MAAMJ,OAAO,CAAC,CAACD,IAAF,CAAlC;MAA2C,KAAK,MAAhD;MAAA,WACGA,IAAI,iBAAI,QAAC,KAAD;QAAA;QAAA;QAAA;MAAA,QADX,EAEG,CAACA,IAAD,iBAAS,QAAC,QAAD;QAAA;QAAA;QAAA;MAAA,QAFZ;IAAA;MAAA;MAAA;MAAA;IAAA,QAjBJ,EAsBGD,IAAI,CAACO,OAAL,IAAgBP,IAAI,CAACQ,KAArB,gBACC,QAAC,QAAD;MAAA,UAAWR,IAAI,CAACQ;IAAhB;MAAA;MAAA;MAAA;IAAA,QADD,gBAGC,QAAC,QAAD;MAAU,KAAK,EAAE;QAAEC,UAAU,EAAE;MAAd,CAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAzBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA8BD,CAjCM;;GAAMb,S;UACWR,Q;;;KADXQ,S"},"metadata":{},"sourceType":"module"}