{"ast":null,"code":"var _jsxFileName = \"/home/kali/NEW/EpikRobotik/reactuserlogin/src/pages/PasswordReset.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./../css/PasswordReset.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PasswordReset = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n\n  async function updatePassword(event) {\n    event.preventDefault();\n    const response = await fetch(\"http://127.0.0.1:5050/api/v1/users/updateMyPassword\", {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email\n      })\n    });\n    const data = await response.json();\n    console.log(data);\n\n    if (data.status === \"success\") {\n      navigate(\"/dashboard\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"center\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updatePassword,\n      className: \"formpassword\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"login\",\n        children: \"Change Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"label\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        type: \"email\",\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Send\",\n        className: \"button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PasswordReset, \"yGHs7W6rUk6h2xensv9vkiPLYlc=\", false, function () {\n  return [useNavigate];\n});\n\n_c = PasswordReset;\nexport default PasswordReset;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordReset\");","map":{"version":3,"names":["useState","useNavigate","PasswordReset","navigate","email","setEmail","updatePassword","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","status","e","target","value"],"sources":["/home/kali/NEW/EpikRobotik/reactuserlogin/src/pages/PasswordReset.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./../css/PasswordReset.css\";\n\nconst PasswordReset = () => {\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  async function updatePassword(event) {\n    event.preventDefault();\n    const response = await fetch(\n      \"http://127.0.0.1:5050/api/v1/users/updateMyPassword\",\n      {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          email,\n        }),\n      }\n    );\n\n    const data = await response.json();\n    console.log(data);\n\n    if (data.status === \"success\") {\n      navigate(\"/dashboard\");\n    }\n  }\n\n  return (\n    <center>\n      <form onSubmit={updatePassword} className=\"formpassword\">\n        <h1 id=\"login\">Change Password</h1>\n        <input\n          className=\"label\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          type=\"email\"\n          placeholder=\"Email\"\n        />\n        <br />\n        <input type=\"submit\" value=\"Send\" className=\"button\" />\n      </form>\n    </center>\n  );\n};\nexport default PasswordReset;"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAO,4BAAP;;;AAEA,MAAMC,aAAa,GAAG,MAAM;EAAA;;EAC1B,MAAMC,QAAQ,GAAGF,WAAW,EAA5B;EACA,MAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;;EACA,eAAeM,cAAf,CAA8BC,KAA9B,EAAqC;IACnCA,KAAK,CAACC,cAAN;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,qDAD0B,EAE1B;MACEC,MAAM,EAAE,OADV;MAEEC,OAAO,EAAE;QACP,gBAAgB;MADT,CAFX;MAKEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACnBX;MADmB,CAAf;IALR,CAF0B,CAA5B;IAaA,MAAMY,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAnB;IACAC,OAAO,CAACC,GAAR,CAAYH,IAAZ;;IAEA,IAAIA,IAAI,CAACI,MAAL,KAAgB,SAApB,EAA+B;MAC7BjB,QAAQ,CAAC,YAAD,CAAR;IACD;EACF;;EAED,oBACE;IAAA,uBACE;MAAM,QAAQ,EAAEG,cAAhB;MAAgC,SAAS,EAAC,cAA1C;MAAA,wBACE;QAAI,EAAE,EAAC,OAAP;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,SAAS,EAAC,OADZ;QAEE,KAAK,EAAEF,KAFT;QAGE,QAAQ,EAAGiB,CAAD,IAAOhB,QAAQ,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAH3B;QAIE,IAAI,EAAC,OAJP;QAKE,WAAW,EAAC;MALd;QAAA;QAAA;QAAA;MAAA,QAFF,eASE;QAAA;QAAA;QAAA;MAAA,QATF,eAUE;QAAO,IAAI,EAAC,QAAZ;QAAqB,KAAK,EAAC,MAA3B;QAAkC,SAAS,EAAC;MAA5C;QAAA;QAAA;QAAA;MAAA,QAVF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD,CA1CD;;GAAMrB,a;UACaD,W;;;KADbC,a;AA2CN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}